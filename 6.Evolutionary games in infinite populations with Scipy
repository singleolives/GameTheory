     #Evolutionary games in infinite populations with Scipy
import numpy as np 
from scipy.integrate import odeint    #ordenary differential equation integrator
import matplotlib.pyplot as plt

#Define derivative on the left numerically
def dx(x, t, A):
   f = np.dot(A, x)
   phi = np.dot(f, x)
   return x * (f - phi)

t = np.linspace(0, 10, 100)      #integrate time periods
A = np.array([[4, 3, 2], [2, 1, 5], [6, 0, 3]])
xs = odeint(func= dx, y0= [1/3, 1/3, 1/3], t= t, args= (A,))        #Create all x's overtime

plt.plot(xs)
plt.show()
